<App Background="#CCCCCC">
  <Fuse.iOS.StatusBarConfig Style="Dark" />
  <Font File="resources/fonts/computer_pixel.ttf" ux:Global="ComputerPixel" />

  <JavaScript>
  var Pictures = require('PictureList');
  var Observable = require("FuseJS/Observable");
  var RandomPictureSet = Pictures.getList();
  var PicturesArr = Observable();
  var currentCounter = 0;
  var currentPic = null;
  var Busy = Observable(false);

  function addPics(pic, i){
    pic.active = false;
    pic.index = currentCounter;
    PicturesArr.add(pic);
    currentCounter = i;
    PicturesArr.map(function(item, i){
      if (i === 0) {
        item.active = true;
      }
    })
  }

  function refreshPics(x){
    PicturesArr.removeAt(0);
    setTimeout(function(){
      var pic = PicturesArr.getAt(0);
      if(pic) {
        pic.active = true;
        pic.liked = false;
        pic.not_liked = false;
        PicturesArr.replaceAt(0, pic);
      }
    }, 300)

    if (currentCounter <= 2) {
      RandomPictureSet.splice(0, 3).map(addPics);
      if (RandomPictureSet.length === 0){
        debug_log("Finalizado");
      } else {
        currentCounter += 3;
      }
    } 
    currentCounter--;
  }

  function liked(x) {
    debug_log("liked " + JSON.stringify(x.data));
    refreshPics(x.data);
  }
  function notLiked(x) {
    debug_log("notLiked " + JSON.stringify(x.data));
    refreshPics(x.data);
  }

  function handleLiked() {
    if (!Busy.value) {
      var pic = PicturesArr.getAt(0);
      if (pic) {
        pic.liked = true;
        liked({data: pic});
      }
    }
  }
  function handleNotLiked() {
    if (!Busy.value) {
      var pic = PicturesArr.getAt(0);
      if (pic) {
        pic.not_liked = true;
        notLiked({data: pic});
      }
    }
  }
  
  RandomPictureSet.splice(0, 3).map(addPics);
  var pic = PicturesArr.getAt(0);
  if(pic) {
    pic.active = true;
  }

  module.exports = {
    handleLiked,
    handleNotLiked,
    liked,
    notLiked,
    PicturesArr
  };

  </JavaScript>
  <Text ux:Class="TituloText" Font="ComputerPixel" Alignment="Center" Color="#BEF0E7" FontSize="45" />
  <Grid Rows="1*,6*,1*" Color="#FFF">
    <StackPanel Color="#000" ItemSpacing="-20">
      <TituloText>Gxndxr</TituloText>
      <TituloText>Generator</TituloText>
    </StackPanel>

    <Panel ux:Name="PicsPanelObj">
      <Each Items="{PicturesArr}">
        <Panel Height="100%" Width="100%">
          <Deferred>
          <Panel>
              <DockPanel Margin="0" Height="90%" Width="90%">
                <Rectangle Layer="Background">
                    <Stroke Width="5" Offset="2" Color="#CCC"/>
                </Rectangle>
                <Grid Dock="Top">
                  <Image MaxHeight="100%" StretchMode="Uniform" Dock="Fill" File="{file}" />
                </Grid>
              </DockPanel>

              <InForceFieldAnimation ForceField="likedAttractor" From="0.01" To="0.2">
                <Rotate Degrees="-8" />
              </InForceFieldAnimation>

              <InForceFieldAnimation ForceField="notLikedAttractor" From="0.01" To="0.2">
                <Rotate Degrees="8" />
              </InForceFieldAnimation>

              <EnteredForceField ForceField="likedAttractor" Threshold="0.9" Handler="{liked}" />
              <EnteredForceField ForceField="notLikedAttractor" Threshold="0.9" Handler="{notLiked}" />

              <WhileTrue Value="{active}">
                <Draggable Axis="X"/>

                <WhileTrue Value="{liked}">
                    <Move X="200" Duration="0.6" />
                </WhileTrue>
                <WhileTrue Value="{not_liked}">
                    <Move X="-200" Duration="0.6" />
                </WhileTrue>
              </WhileTrue>

              <WhileDragging>
                <BringToFront />
                <Scale Factor="1.05" Duration="0.5" Easing="BackOut" />
              </WhileDragging>
          </Panel>
          </Deferred>
        </Panel>
      </Each>
        
      <PointAttractor ux:Name="centerAttractor" Radius="600" Strength="250" />
      <PointAttractor ux:Name="notLikedAttractor" Offset="-450,0,0" Radius="380" Strength="500" />
      <PointAttractor ux:Name="likedAttractor" Offset="450,0,0" Radius="380" Strength="500" />
    </Panel>
  
    <StackPanel Alignment="Center" ItemSpacing="60" Orientation="Horizontal" Margin="0,0,0,20">
      <Panel MaxWidth="100">
        <Image ux:Name="dislikePic" File="resources/interface/dislike.jpg" StretchMode="UniformToFill" />
        <Clicked Handler="{handleNotLiked}">
          <Scale Factor="1.2" Duration="0.1" Easing="BounceInOut" />
        </Clicked>
      </Panel>
      <Panel MaxWidth="100">
        <Image ux:Name="likePic" File="resources/interface/like.jpg" StretchMode="UniformToFill" />
        <Clicked Handler="{handleLiked}">
          <Scale Factor="1.2" Duration="0.1" Easing="BounceInOut" />
        </Clicked>
      </Panel>
    </StackPanel>
  </Grid>
  
</App>
